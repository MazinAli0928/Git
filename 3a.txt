#include
<stdio.h>
#include<limits.h>
#define V 4
voidfloydWarshall(intgraph[V][V])
{
intdist[V][V];
for(inti=0;i<V;i++)for(int j=0; j<V;j++) dist[i][j]
= graph[i][j];
for(int k=0;k<V;k++) for (inti=0;i<V; i++)
for(intj=0;j<V; j++)
if(dist[i][k]!=INT_MAX&&dist[k][j]!=INT_MAX&& dist[i][k]+dist[k][j]
<dist[i][j])dist[i][j]=dist[i][k]+ dist[k][j]
("Shortestdistancesbetweeneverypairofvertices:\n"); for
(int i = 0; i < V; i++)
{
for(intj=0; j<V; j++)
{
if(dist[i][j]==INT_MAX)
printf("INF\t");
else
printf("%d\t",dist[i][j]);
}
printf("\n");
}
}
intmain(){
int graph[V][V]={{0,INT_MAX,3,INT_MAX},
{2,0,INT_MAX,INT_MAX},
{INT_MAX,7,0,1},{6,INT_MAX,INT_MAX,0}};
floydWarshall(graph);
return 0;
}


Shortestdistancesbetweeneverypairofvertices:
0 10 3 4
2 0 5 6
7 7 0 1
6 16 9 0